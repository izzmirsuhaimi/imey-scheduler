{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\izzmi\\\\PycharmProjects\\\\PythonProject\\\\my-timetable\\\\src\\\\BackgroundCropperModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport Cropper from \"react-easy-crop\";\nimport getCroppedImg from \"./cropImageUtil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BackgroundCropperModal({\n  imageSrc,\n  onCropComplete,\n  onClose,\n  width,\n  height\n}) {\n  _s();\n  const aspect = width / height;\n  const [crop, setCrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n  const handleCropComplete = useCallback((_, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n  async function handleSave() {\n    const croppedImage = await getCroppedImg(imageSrc, croppedAreaPixels, width, height);\n    onCropComplete(croppedImage);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-70 flex justify-center items-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded relative\",\n      style: {\n        width: 400,\n        height: 600\n      },\n      children: [/*#__PURE__*/_jsxDEV(Cropper, {\n        image: imageSrc,\n        crop: crop,\n        zoom: zoom,\n        aspect: aspect,\n        onCropChange: setCrop,\n        onZoomChange: setZoom,\n        onCropComplete: handleCropComplete,\n        cropShape: \"rect\",\n        showGrid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 flex gap-2 justify-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-3 py-1 rounded bg-gray-300\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-3 py-1 rounded bg-blue-500 text-white\",\n          onClick: handleSave,\n          children: \"Crop & Set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(BackgroundCropperModal, \"JOiErNjyj93VpHFlX/NiJaJvYto=\");\n_c = BackgroundCropperModal;\nvar _c;\n$RefreshReg$(_c, \"BackgroundCropperModal\");","map":{"version":3,"names":["React","useState","useCallback","Cropper","getCroppedImg","jsxDEV","_jsxDEV","BackgroundCropperModal","imageSrc","onCropComplete","onClose","width","height","_s","aspect","crop","setCrop","x","y","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","handleCropComplete","_","handleSave","croppedImage","className","children","style","image","onCropChange","onZoomChange","cropShape","showGrid","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/izzmi/PycharmProjects/PythonProject/my-timetable/src/BackgroundCropperModal.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport getCroppedImg from \"./cropImageUtil\";\r\n\r\nexport default function BackgroundCropperModal({ imageSrc, onCropComplete, onClose, width, height }) {\r\n  const aspect = width / height;\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n  const [zoom, setZoom] = useState(1);\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\r\n\r\n  const handleCropComplete = useCallback((_, croppedAreaPixels) => {\r\n    setCroppedAreaPixels(croppedAreaPixels);\r\n  }, []);\r\n\r\n  async function handleSave() {\r\n    const croppedImage = await getCroppedImg(imageSrc, croppedAreaPixels, width, height);\r\n    onCropComplete(croppedImage);\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-70 flex justify-center items-center z-50\">\r\n      <div className=\"bg-white p-4 rounded relative\" style={{ width: 400, height: 600 }}>\r\n        <Cropper\r\n          image={imageSrc}\r\n          crop={crop}\r\n          zoom={zoom}\r\n          aspect={aspect}\r\n          onCropChange={setCrop}\r\n          onZoomChange={setZoom}\r\n          onCropComplete={handleCropComplete}\r\n          cropShape=\"rect\"\r\n          showGrid={true}\r\n        />\r\n        <div className=\"mt-4 flex gap-2 justify-end\">\r\n          <button className=\"px-3 py-1 rounded bg-gray-300\" onClick={onClose}>Cancel</button>\r\n          <button className=\"px-3 py-1 rounded bg-blue-500 text-white\" onClick={handleSave}>Crop & Set</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,sBAAsBA,CAAC;EAAEC,QAAQ;EAAEC,cAAc;EAAEC,OAAO;EAAEC,KAAK;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACnG,MAAMC,MAAM,GAAGH,KAAK,GAAGC,MAAM;EAC7B,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC;IAAEgB,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACoB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAEhE,MAAMsB,kBAAkB,GAAGrB,WAAW,CAAC,CAACsB,CAAC,EAAEH,iBAAiB,KAAK;IAC/DC,oBAAoB,CAACD,iBAAiB,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeI,UAAUA,CAAA,EAAG;IAC1B,MAAMC,YAAY,GAAG,MAAMtB,aAAa,CAACI,QAAQ,EAAEa,iBAAiB,EAAEV,KAAK,EAAEC,MAAM,CAAC;IACpFH,cAAc,CAACiB,YAAY,CAAC;EAC9B;EAEA,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,4EAA4E;IAAAC,QAAA,eACzFtB,OAAA;MAAKqB,SAAS,EAAC,+BAA+B;MAACE,KAAK,EAAE;QAAElB,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI,CAAE;MAAAgB,QAAA,gBAChFtB,OAAA,CAACH,OAAO;QACN2B,KAAK,EAAEtB,QAAS;QAChBO,IAAI,EAAEA,IAAK;QACXI,IAAI,EAAEA,IAAK;QACXL,MAAM,EAAEA,MAAO;QACfiB,YAAY,EAAEf,OAAQ;QACtBgB,YAAY,EAAEZ,OAAQ;QACtBX,cAAc,EAAEc,kBAAmB;QACnCU,SAAS,EAAC,MAAM;QAChBC,QAAQ,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACFhC,OAAA;QAAKqB,SAAS,EAAC,6BAA6B;QAAAC,QAAA,gBAC1CtB,OAAA;UAAQqB,SAAS,EAAC,+BAA+B;UAACY,OAAO,EAAE7B,OAAQ;UAAAkB,QAAA,EAAC;QAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnFhC,OAAA;UAAQqB,SAAS,EAAC,0CAA0C;UAACY,OAAO,EAAEd,UAAW;UAAAG,QAAA,EAAC;QAAU;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzB,EAAA,CApCuBN,sBAAsB;AAAAiC,EAAA,GAAtBjC,sBAAsB;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}